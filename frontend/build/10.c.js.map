{"version":3,"sources":["webpack:///./routes/track/style.css","webpack:///./routes/track/index.js","webpack:///./lib/commands/index.js","webpack:///../esm/themeUtils/generateThemeClass.js","webpack:///../esm/Button/index.js"],"names":["module","exports","Track","state","trackingState","intervalometerEnabled","intervalometerState","elapsedMillis","error","handleError","e","console","setState","onHomePressed","preventDefault","startHoming","then","r","catch","onTrackPressed","startTracking","onStopPressed","stopTracking","onIntervalometerToggled","enabled","target","checked","log","toggleIntervalometer","componentDidMount","getTrackState","timer","setInterval","refreshAlignmentStatus","bind","componentWillUnmount","clearInterval","this","_id","msToTime","duration","seconds","Math","floor","minutes","hours","errorToast","toString","homeButton","raised","ripple","onClick","trackButton","stopButton","label","value","disabled","elapsedTime","render","class","style","track","onChange","Component","toggleIgnoreAz","axios","post","config","endpoint","data","toggleIgnoreAlt","toggleDewController","toggleDewControllerLogging","command","ButtonIcon","Icon","Button","props","ButtonElement","className","themeProp","h","ref","setControlRef","MaterialComponent","default_1"],"mappings":"6EACAA,EAAOC,QAAU,CAAC,MAAQ,iB,6PCkBLC,E,oJACnBC,MAAQ,CACNC,cAAe,OACfC,sBAAuB,KACvBC,oBAAqB,KACrBC,cAAe,KACfC,MAAO,M,EAiBTC,YAAc,SAACC,GACbC,QAAQH,MAAM,UAAWE,GACzB,EAAKE,SAAS,CAAEJ,MAAOE,K,EAsCzBG,cAAgB,SAACH,GACfA,EAAEI,iBACFC,cACGC,MAAK,SAACC,GAAD,OAAO,EAAKL,SAAS,CAAER,cAAea,OAC3CC,OAAM,SAACR,GAAD,OAAO,EAAKD,YAAYC,O,EAGnCS,eAAiB,SAACT,GAChBA,EAAEI,iBACFM,cACGJ,MAAK,SAACC,GAAD,OACJ,EAAKL,SAAS,CACZR,cAAea,EACfX,oBAAqB,KACrBC,cAAe,OAGlBW,OAAM,SAACR,GAAD,OAAO,EAAKD,YAAYC,O,EAGnCW,cAAgB,SAACX,GACfA,EAAEI,iBACFQ,cACGN,MAAK,SAACC,GAAD,OAAO,EAAKL,SAAS,CAAER,cAAea,OAC3CC,OAAM,SAACR,GAAD,OAAO,EAAKD,YAAYC,O,EAGnCa,wBAA0B,SAACb,GACzB,IAAMc,EAAUd,EAAEe,OAAOC,QACzBf,QAAQgB,IAAR,+BACgCH,EAAU,UAAY,aAEtD,EAAKZ,SAAS,CAAEP,sBAAuBmB,IACvCI,YAAqBJ,GAClBR,MAAK,SAACC,GAAD,OAAO,EAAKL,SAAS,CAAEP,sBAAuBY,OACnDC,OAAM,SAACR,GAAD,OAAO,EAAKD,YAAYC,O,4HAzF7BmB,kBAAN,4DACEC,cACGd,MAAK,SAACC,GACL,EAAKL,SAAS,CACZR,cAAea,EAAEd,MACjBE,sBAAuBY,EAAEZ,sBACzBE,cAAeU,EAAEV,gBAEnBI,QAAQgB,IAAI,6BACZ,EAAKI,MAAQC,sBAAY,EAAKC,uBAAuBC,KAAK,GAAO,QAElEhB,OAAM,SAACR,GAAD,OAAO,EAAKD,YAAYC,MAXnC,kB,EAmBMuB,uBAAN,4DACEH,cACGd,MAAK,SAACC,GACL,EAAKL,SAAS,CACZR,cAAea,EAAEd,MACjBG,oBAAqBW,EAAEX,oBACvBC,cAAeU,EAAEV,mBAGpBW,OAAM,SAACR,GAAD,OAAO,EAAKD,YAAYC,MATnC,kB,EAYAyB,qBAAA,WACExB,QAAQgB,IAAI,oBACZS,cAAcC,KAAKN,MAAMO,M,EAG3BC,SAAA,SAASC,GACP,IAAIC,EAAUC,KAAKC,MAAOH,EAAW,IAAQ,IAC3CI,EAAUF,KAAKC,MAAOH,EAAW,IAAe,IAChDK,EAAQH,KAAKC,MAAOH,EAAW,KAAoB,IAMrD,OAJAK,EAAQA,EAAQ,GAAK,IAAMA,EAAQA,GAIpB,KAHfD,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GAGV,KAF/BH,EAAUA,EAAU,GAAK,IAAMA,EAAUA,I,EAK3CK,WAAA,WACE,GAAwB,MAApBT,KAAKlC,MAAMK,MACb,OAAO,qBAAI6B,KAAKlC,MAAMK,MAAMuC,a,EA0ChCC,WAAA,WACE,GAAgC,QAA5BX,KAAKlC,MAAMC,cACb,OACE,qBACE,YAAC,IAAD,CAAQ6C,QAAM,EAACC,QAAM,EAACC,QAASd,KAAKxB,cAAcqB,KAAKG,OAAvD,U,EAQRe,YAAA,WACE,GAAgC,SAA5Bf,KAAKlC,MAAMC,cACb,OACE,qBACE,YAAC,IAAD,CAAQ6C,QAAM,EAACC,QAAM,EAACC,QAASd,KAAKlB,eAAee,KAAKG,OAAxD,W,EAQRgB,WAAA,WACE,GAAgC,YAA5BhB,KAAKlC,MAAMC,cACb,OACE,qBACE,YAAC,IAAD,CAAQ6C,QAAM,EAACC,QAAM,EAACC,QAASd,KAAKhB,cAAca,KAAKG,OAAvD,U,EAQR/B,oBAAA,WACE,IACuC,IAArC+B,KAAKlC,MAAME,uBACkB,aAA7BgC,KAAKlC,MAAMC,eACuB,MAAlCiC,KAAKlC,MAAMG,oBAEX,OACE,qBACE,YAAC,IAAD,CACEgD,MAAM,iBACNC,MAAOlB,KAAKlC,MAAMG,oBAClBkD,SAAS,W,EAOnBC,YAAA,WACE,GAC+B,aAA7BpB,KAAKlC,MAAMC,eACiB,MAA5BiC,KAAKlC,MAAMI,cAEX,OACE,qBACE,YAAC,IAAD,CACE+C,MAAM,eACNC,MAAOlB,KAAKE,SAASF,KAAKlC,MAAMI,eAChCiD,SAAS,W,EAOnBE,OAAA,e,2EAAqD,QAAxCtD,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,sBAC1B,OACE,mBAAKsD,MAAOC,IAAMC,OAChB,+BACA,uBACGxB,KAAKS,aACN,qBACE,YAAC,IAAD,CACEQ,MAAM,kBACNC,MAAOnD,EACPoD,SAAS,UAGZnB,KAAKoB,cACLpB,KAAK/B,sBACN,uCACkB,IAChB,YAAC,IAAD,CACEwD,SAAUzB,KAAKd,wBAAwBW,KAAKG,MAC5CX,SAAmC,IAA1BrB,KAGZgC,KAAKW,aACLX,KAAKe,cACLf,KAAKgB,gB,GApMmBU,c,oDChBnC,SAAeC,EAAexC,GAA9B,gCACE,SAAOyC,IACJC,KAAQC,IAAOC,SADX,2BAC+C,CAClD5C,YAEDR,MAAK,SAACC,GACL,OAAOA,EAAEoD,KAAK7C,eAIpB,SAAe8C,EAAgB9C,GAA/B,gCACE,SAAOyC,IACJC,KAAQC,IAAOC,SADX,4BACgD,CACnD5C,YAEDR,MAAK,SAACC,GACL,OAAOA,EAAEoD,KAAK7C,eAIpB,SAAeI,EAAqBJ,GAApC,gCACE,SAAOyC,IACJC,KAAQC,IAAOC,SADX,iCACqD,CACxD5C,YAEDR,MAAK,SAACC,GACL,OAAOA,EAAEoD,KAAK7C,eAIpB,SAAe+C,EAAoB/C,GAAnC,gCACE,SAAOyC,IACJC,KAAQC,IAAOC,SADX,gCACoD,CACvD5C,YAEDR,MAAK,SAACC,GACL,OAAOA,EAAEoD,KAAK7C,eAIpB,SAAegD,EAA2BhD,GAA1C,gCACE,SAAOyC,IACJC,KAAQC,IAAOC,SADX,wCAC4D,CAC/D5C,YAEDR,MAAK,SAACC,GACL,OAAOA,EAAEoD,KAAK7C,eAIpB,SAAeT,IAAf,gCACE,SAAOkD,IACJC,KAAQC,IAAOC,SADX,iBACqC,CACxCK,QAAS,SAEVzD,MAAK,SAACC,GAAD,OAAOA,EAAEoD,KAAKlE,aAGxB,SAAeiB,IAAf,gCACE,SAAO6C,IACJC,KAAQC,IAAOC,SADX,iBACqC,CACxCK,QAAS,UAEVzD,MAAK,SAACC,GAAD,OAAOA,EAAEoD,KAAKlE,aAGxB,SAAemB,IAAf,gCACE,SAAO2C,IACJC,KAAQC,IAAOC,SADX,iBACqC,CACxCK,QAAS,SAEVzD,MAAK,SAACC,GAAD,OAAOA,EAAEoD,KAAKlE,aA1ExB,sT,2FCAe,YACX,sC,waCDJ,YACA,eACA,eACA,eACauE,E,YACT,aAAc,mCACV,8DACA,6BAFU,E,4BADcC,W,mBAMnBC,E,YACT,aAAc,mCACV,8DACA,uBACA,WAAgB,CAAC,QAAS,SAAU,aAApC,YACA,aAAkB,CAAC,UAAnB,aAJU,E,4EAMFC,GACR,IAAMC,EAAgBD,WAAtB,SACIE,EAAJ,GAMA,OALA1C,KAAA,oBAAwB,SAAA2C,GAChBA,SAAJ,IAA0BH,OACtBE,IAAa,gBAAbA,SAGA,IAAAE,GAAA,EAAiB,EAAc,CAAEC,IAAK7C,KAAK8C,eAA1B,EAAkD,CAAEJ,UAAWA,IAAc1C,KAAKwC,MAA3G,c,GAfoBO,W,eAkBPC,E,4IAAkBT,G,YAEvCS","file":"10.c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"track\":\"track__1MheK\"};","import { h, Component } from 'preact';\nimport style from './style';\n\nimport Button from 'preact-material-components/Button';\nimport 'preact-material-components/Button/style.css';\nimport Switch from 'preact-material-components/Switch';\nimport 'preact-material-components/Switch/style.css';\nimport TextField from 'preact-material-components/TextField';\nimport 'preact-material-components/TextField/style.css';\n\nimport { getTrackState } from '../../lib/settings';\nimport {\n  startHoming,\n  startTracking,\n  stopTracking,\n  toggleIntervalometer,\n} from '../../lib/commands';\nimport { setInterval } from 'timers';\n\nexport default class Track extends Component {\n  state = {\n    trackingState: 'Idle',\n    intervalometerEnabled: null,\n    intervalometerState: null,\n    elapsedMillis: null,\n    error: null,\n  };\n\n  async componentDidMount() {\n    getTrackState()\n      .then((r) => {\n        this.setState({\n          trackingState: r.state,\n          intervalometerEnabled: r.intervalometerEnabled,\n          elapsedMillis: r.elapsedMillis,\n        });\n        console.log('Starting Refresh Interval');\n        this.timer = setInterval(this.refreshAlignmentStatus.bind(this), 1000);\n      })\n      .catch((e) => this.handleError(e));\n  }\n\n  handleError = (e) => {\n    console.error('problem', e);\n    this.setState({ error: e });\n  };\n\n  async refreshAlignmentStatus() {\n    getTrackState()\n      .then((r) => {\n        this.setState({\n          trackingState: r.state,\n          intervalometerState: r.intervalometerState,\n          elapsedMillis: r.elapsedMillis,\n        });\n      })\n      .catch((e) => this.handleError(e));\n  }\n\n  componentWillUnmount() {\n    console.log('Cancelling timer');\n    clearInterval(this.timer._id);\n  }\n\n  msToTime(duration) {\n    var seconds = Math.floor((duration / 1000) % 60),\n      minutes = Math.floor((duration / (1000 * 60)) % 60),\n      hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n    hours = hours < 10 ? '0' + hours : hours;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n\n    return hours + ':' + minutes + ':' + seconds;\n  }\n\n  errorToast() {\n    if (this.state.error != null) {\n      return <p>{this.state.error.toString()}</p>;\n    }\n  }\n\n  onHomePressed = (e) => {\n    e.preventDefault();\n    startHoming()\n      .then((r) => this.setState({ trackingState: r }))\n      .catch((e) => this.handleError(e));\n  };\n\n  onTrackPressed = (e) => {\n    e.preventDefault();\n    startTracking()\n      .then((r) =>\n        this.setState({\n          trackingState: r,\n          intervalometerState: null,\n          elapsedMillis: 0,\n        }),\n      )\n      .catch((e) => this.handleError(e));\n  };\n\n  onStopPressed = (e) => {\n    e.preventDefault();\n    stopTracking()\n      .then((r) => this.setState({ trackingState: r }))\n      .catch((e) => this.handleError(e));\n  };\n\n  onIntervalometerToggled = (e) => {\n    const enabled = e.target.checked;\n    console.log(\n      `Intervalometer toggled to: ${enabled ? 'enabled' : 'disabled'}`,\n    );\n    this.setState({ intervalometerEnabled: enabled });\n    toggleIntervalometer(enabled)\n      .then((r) => this.setState({ intervalometerEnabled: r }))\n      .catch((e) => this.handleError(e));\n  };\n\n  homeButton() {\n    if (this.state.trackingState == 'Idle') {\n      return (\n        <p>\n          <Button raised ripple onClick={this.onHomePressed.bind(this)}>\n            Home\n          </Button>\n        </p>\n      );\n    }\n  }\n\n  trackButton() {\n    if (this.state.trackingState == 'Homed') {\n      return (\n        <p>\n          <Button raised ripple onClick={this.onTrackPressed.bind(this)}>\n            Track\n          </Button>\n        </p>\n      );\n    }\n  }\n\n  stopButton() {\n    if (this.state.trackingState == 'Tracking') {\n      return (\n        <p>\n          <Button raised ripple onClick={this.onStopPressed.bind(this)}>\n            Stop\n          </Button>\n        </p>\n      );\n    }\n  }\n\n  intervalometerState() {\n    if (\n      this.state.intervalometerEnabled === true &&\n      this.state.trackingState === 'Tracking' &&\n      this.state.intervalometerState != null\n    ) {\n      return (\n        <p>\n          <TextField\n            label=\"Intervalometer\"\n            value={this.state.intervalometerState}\n            disabled=\"true\"\n          />\n        </p>\n      );\n    }\n  }\n\n  elapsedTime() {\n    if (\n      this.state.trackingState === 'Tracking' &&\n      this.state.elapsedMillis != null\n    ) {\n      return (\n        <p>\n          <TextField\n            label=\"Elapsed Time\"\n            value={this.msToTime(this.state.elapsedMillis)}\n            disabled=\"true\"\n          />\n        </p>\n      );\n    }\n  }\n\n  render({}, { trackingState, intervalometerEnabled }) {\n    return (\n      <div class={style.track}>\n        <h1>Track</h1>\n        <div>\n          {this.errorToast()}\n          <p>\n            <TextField\n              label=\"Tracking Status\"\n              value={trackingState}\n              disabled=\"true\"\n            />\n          </p>\n          {this.elapsedTime()}\n          {this.intervalometerState()}\n          <p>\n            Intervalometer:{' '}\n            <Switch\n              onChange={this.onIntervalometerToggled.bind(this)}\n              checked={intervalometerEnabled === true}\n            ></Switch>\n          </p>\n          {this.homeButton()}\n          {this.trackButton()}\n          {this.stopButton()}\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\nimport config from '../../config';\n\nasync function toggleIgnoreAz(enabled) {\n  return axios\n    .post(`${config.endpoint}/backend/toggle/ignoreAz`, {\n      enabled,\n    })\n    .then((r) => {\n      return r.data.enabled;\n    });\n}\n\nasync function toggleIgnoreAlt(enabled) {\n  return axios\n    .post(`${config.endpoint}/backend/toggle/ignoreAlt`, {\n      enabled,\n    })\n    .then((r) => {\n      return r.data.enabled;\n    });\n}\n\nasync function toggleIntervalometer(enabled) {\n  return axios\n    .post(`${config.endpoint}/backend/toggle/intervalometer`, {\n      enabled,\n    })\n    .then((r) => {\n      return r.data.enabled;\n    });\n}\n\nasync function toggleDewController(enabled) {\n  return axios\n    .post(`${config.endpoint}/backend/toggle/dewcontroller`, {\n      enabled,\n    })\n    .then((r) => {\n      return r.data.enabled;\n    });\n}\n\nasync function toggleDewControllerLogging(enabled) {\n  return axios\n    .post(`${config.endpoint}/backend/toggle/dewcontroller/logging`, {\n      enabled,\n    })\n    .then((r) => {\n      return r.data.enabled;\n    });\n}\n\nasync function startHoming() {\n  return axios\n    .post(`${config.endpoint}/backend/track`, {\n      command: 'home',\n    })\n    .then((r) => r.data.state);\n}\n\nasync function startTracking() {\n  return axios\n    .post(`${config.endpoint}/backend/track`, {\n      command: 'track',\n    })\n    .then((r) => r.data.state);\n}\n\nasync function stopTracking() {\n  return axios\n    .post(`${config.endpoint}/backend/track`, {\n      command: 'stop',\n    })\n    .then((r) => r.data.state);\n}\n\nexport {\n  toggleIgnoreAz,\n  toggleIgnoreAlt,\n  toggleIntervalometer,\n  toggleDewController,\n  toggleDewControllerLogging,\n  startHoming,\n  startTracking,\n  stopTracking,\n};\n","export default function (prop) {\n    return `mdc-theme--${prop}-bg`;\n}\n//# sourceMappingURL=generateThemeClass.js.map","import { h } from 'preact';\nimport MaterialComponent from '../Base/MaterialComponent';\nimport Icon from '../Icon';\nimport generateThemeClass from '../themeUtils/generateThemeClass';\nexport class ButtonIcon extends Icon {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'button__icon';\n    }\n}\nexport class Button extends MaterialComponent {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'button';\n        this.mdcProps = ['dense', 'raised', 'unelevated', 'outlined'];\n        this.themeProps = ['primary', 'secondary'];\n    }\n    materialDom(props) {\n        const ButtonElement = props.href ? 'a' : 'button';\n        let className = '';\n        this.themeProps.forEach(themeProp => {\n            if (themeProp in props && props[themeProp] !== false) {\n                className += generateThemeClass(themeProp) + ' ';\n            }\n        });\n        return (h(ButtonElement, Object.assign({ ref: this.setControlRef }, props, { className: className }), this.props.children));\n    }\n}\nexport default class default_1 extends Button {\n}\ndefault_1.Icon = ButtonIcon;\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}