{"version":3,"sources":["webpack:///../esm/TextField/index.js","webpack:///../node_modules/@material/textfield/constants.js","webpack:///../node_modules/@material/textfield/helper-text/constants.js","webpack:///../node_modules/@material/textfield/helper-text/foundation.js","webpack:///../node_modules/@material/textfield/icon/constants.js","webpack:///../node_modules/@material/textfield/icon/foundation.js","webpack:///../node_modules/@material/textfield/foundation.js","webpack:///../node_modules/@material/line-ripple/constants.js","webpack:///../node_modules/@material/line-ripple/foundation.js","webpack:///../node_modules/@material/line-ripple/index.js","webpack:///../node_modules/@material/textfield/helper-text/index.js","webpack:///../node_modules/@material/textfield/icon/index.js","webpack:///../node_modules/@material/floating-label/constants.js","webpack:///../node_modules/@material/floating-label/foundation.js","webpack:///../node_modules/@material/floating-label/index.js","webpack:///../node_modules/@material/notched-outline/constants.js","webpack:///../node_modules/@material/notched-outline/foundation.js","webpack:///../node_modules/@material/notched-outline/index.js","webpack:///../node_modules/@material/textfield/index.js"],"names":["__rest","s","e","t","Object","i","p","HelperText","props","h","MaterialComponent","Label","TextFieldInput","jsComponentAttached","this","MDCTextField","nextProps","MDComponent","value","allprops","className","outerStyle","outlined","state","join","console","ref","style","Icon","type","placeholder","for","id","class","cn","valid","TextField","helperTextPersistent","helperTextValidationMsg","showDiv","helperTextProps","persistent","onInit","Component","default_1","strings","ARIA_CONTROLS","INPUT_SELECTOR","LABEL_SELECTOR","ICON_SELECTOR","OUTLINE_SELECTOR","LINE_RIPPLE_SELECTOR","cssClasses","ROOT","DISABLED","DENSE","FOCUSED","INVALID","TEXTAREA","OUTLINED","numbers","LABEL_SCALE","DENSE_LABEL_SCALE","VALIDATION_ATTR_WHITELIST","ALWAYS_FLOAT_TYPES","ARIA_HIDDEN","ROLE","HELPER_TEXT_PERSISTENT","HELPER_TEXT_VALIDATION_MSG","MDCTextFieldHelperTextFoundation","adapter","defaultAdapter","addClass","removeClass","hasClass","setAttr","removeAttr","setContent","content","adapter_","setPersistent","isPersistent","setValidation","isValidation","showToScreenReader","setValidity","inputIsValid","helperTextIsPersistent","validationMsgNeedsDisplay","hide_","MDCFoundation","ICON_EVENT","ICON_ROLE","MDCTextFieldIconFoundation","savedTabIndex_","interactionHandler_","evt","handleInteraction","getAttr","registerInteractionHandler","deregisterInteractionHandler","notifyIconAction","init","forEach","evtType","destroy","setDisabled","disabled","setAriaLabel","label","key","keyCode","MDCTextFieldFoundation","foundationMap","helperText_","helperText","icon_","icon","isFocused_","receivedUserInput_","useCustomValidityChecking_","isValid_","useNativeValidation_","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","autoCompleteFocus","setPointerXOffset_","setTransformOrigin","textFieldInteractionHandler_","handleTextFieldInteraction","validationAttributeChangeHandler_","attributesList","handleValidationAttributeChange","registerTextFieldInteractionHandler","deregisterTextFieldInteractionHandler","registerInputInteractionHandler","deregisterInputInteractionHandler","registerValidationAttributeChangeHandler","deregisterValidationAttributeChangeHandler","getNativeInput","isFocused","isRtl","activateLineRipple","deactivateLineRipple","setLineRippleTransformOrigin","shakeLabel","floatLabel","hasLabel","getLabelWidth","hasOutline","notchOutline","closeOutline","isValid","getValue","getNativeInput_","indexOf","shouldAlwaysFloat_","isBadInput_","shouldFloat","validationObserver_","some","attributeName","styleValidity_","openNotch","labelScale","labelWidth","styleFocused_","shouldShake","targetClientRect","target","getBoundingClientRect","clientX","left","setValue","isNativeInputValid_","setValid","setUseNativeValidation","useNativeValidation","isDisabled","styleDisabled_","setHelperTextContent","setIconAriaLabel","setIconContent","validity","badInput","LINE_RIPPLE_ACTIVE","LINE_RIPPLE_DEACTIVATING","MDCLineRippleFoundation","transitionEndHandler_","handleTransitionEnd","setStyle","registerEventHandler","deregisterEventHandler","activate","setRippleCenter","xCoordinate","deactivate","isDeactivating","propertyName","MDCLineRipple","attachTo","root","foundation_","getDefaultFoundation","root_","classList","add","remove","contains","handler","addEventListener","removeEventListener","MDCComponent","MDCTextFieldHelperText","attr","setAttribute","removeAttribute","textContent","MDCTextFieldIcon","getAttribute","emit","LABEL_FLOAT_ABOVE","LABEL_SHAKE","MDCFloatingLabelFoundation","shakeAnimationEndHandler_","handleShakeAnimationEnd_","getWidth","shake","float","MDCFloatingLabel","offsetWidth","PATH_SELECTOR","IDLE_OUTLINE_SELECTOR","OUTLINE_NOTCHED","MDCNotchedOutlineFoundation","getHeight","setOutlinePathAttr","getIdleOutlineStyleValue","notch","notchWidth","updateSvgPath_","closeNotch","radiusStyleValue","radius","parseFloat","width","height","cornerWidth","leadingStrokeLength","Math","abs","paddedNotchWidth","pathMiddle","MDCNotchedOutline","offsetHeight","querySelector","idleOutlineElement","parentNode","window","getComputedStyle","getPropertyValue","args","initialize","rippleFactory","lineRippleFactory","helperTextFactory","iconFactory","labelFactory","outlineFactory","el","foundation","MDCRipple","input_","labelElement","label_","lineRippleElement","lineRipple_","outlineElement","outline_","hasAttribute","helperTextElement","document","getElementById","iconElement","ripple","MATCHES","getMatchesProperty","HTMLElement","prototype","createAdapter","isSurfaceActive","MDCRippleFoundation","initialSyncWithDom","layout","observer","MutationObserver","mutationsList","map","mutation","getAttributesList","targetNode","observe","attributes","disconnect","activeElement","getInputAdapterMethods_","getLabelAdapterMethods_","getLineRippleAdapterMethods_","getOutlineAdapterMethods_","getFoundationMap_","normalizedX","undefined","required","pattern","minLength","maxLength","min","max","step"],"mappings":"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","file":"0.c.js","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { MDCTextField } from '@material/textfield';\nimport { Component, h } from 'preact';\nimport MaterialComponent from '../Base/MaterialComponent';\nimport Icon from '../Icon';\nexport class HelperText extends MaterialComponent {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'text-field-helper-text';\n        this.mdcProps = ['persistent', 'validation-msg'];\n    }\n    materialDom(props) {\n        return (h(\"p\", Object.assign({}, props, { \"aria-hidden\": \"true\" }), props.children));\n    }\n}\nexport class Label extends MaterialComponent {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'floating-label';\n        this.mdcProps = [];\n    }\n    materialDom(props) {\n        return h(\"label\", Object.assign({}, props), props.children);\n    }\n}\nexport class TextFieldInput extends MaterialComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            jsComponentAttached: false\n        };\n        this.componentName = 'text-field';\n        this.mdcProps = [\n            'fullwidth',\n            'textarea',\n            'dense',\n            'disabled',\n            'box',\n            'outlined'\n        ];\n        this.mdcNotifyProps = ['valid', 'disabled'];\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        this.setState({\n            jsComponentAttached: true\n        }, () => {\n            if (this.control) {\n                this.MDComponent = new MDCTextField(this.control);\n                if (this.props.onInit) {\n                    this.props.onInit(this.MDComponent);\n                }\n                if (this.props.value) {\n                    this.MDComponent.value = this.props.value;\n                }\n            }\n            this.afterComponentDidMount();\n        });\n    }\n    componentWillReceiveProps(nextProps) {\n        super.componentWillReceiveProps(nextProps);\n        if (this.MDComponent &&\n            nextProps.value &&\n            this.props.value !== nextProps.value &&\n            this.MDComponent.value !== nextProps.value) {\n            this.MDComponent.value = nextProps.value;\n        }\n    }\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        if (this.MDComponent) {\n            this.MDComponent.destroy();\n        }\n    }\n    getValue() {\n        return this.MDComponent ? this.MDComponent.value : null;\n    }\n    materialDom(allprops) {\n        let { className, outerStyle, outlined } = allprops, props = __rest(allprops, [\"className\", \"outerStyle\", \"outlined\"]);\n        className = className || '';\n        if ('leadingIcon' in props) {\n            className += ' mdc-text-field--box mdc-text-field--with-leading-icon';\n        }\n        if ('trailingIcon' in props) {\n            className += ' mdc-text-field--box mdc-text-field--with-trailing-icon';\n        }\n        if ('value' in props && this.state.jsComponentAttached) {\n            className = [className, 'mdc-text-field--upgraded'].join(' ');\n        }\n        if (props.label && props.fullwidth) {\n            console.log('Passing a \"label\" prop is not supported when using a \"fullwidth\" text field.');\n        }\n        // noinspection RequiredAttributes\n        return (h(\"div\", { className: className, ref: this.setControlRef, style: outerStyle },\n            props.leadingIcon ? (h(Icon, { className: \"mdc-text-field__icon\" }, props.leadingIcon)) : null,\n            props.textarea ? (h(\"textarea\", Object.assign({ className: \"mdc-text-field__input\" }, props))) : (h(\"input\", Object.assign({ type: props.type || 'text', className: \"mdc-text-field__input\", placeholder: this.state.jsComponentAttached\n                    ? undefined\n                    : props.label + this.props.required\n                        ? '*'\n                        : '' }, props))),\n            props.label && this.state.jsComponentAttached && (h(Label, { for: props.id }, props.label)),\n            props.trailingIcon ? (h(Icon, { className: \"mdc-text-field__icon\" }, props.trailingIcon)) : null,\n            props.textarea || outlined ? null : h(\"div\", { class: \"mdc-line-ripple\" }),\n            outlined ? (h(\"div\", { class: \"mdc-notched-outline\" },\n                h(\"svg\", null,\n                    h(\"path\", { className: \"mdc-notched-outline__path\" })))) : null,\n            outlined ? h(\"div\", { className: \"mdc-notched-outline__idle\" }) : null));\n    }\n    buildClassName(props) {\n        let cn = super.buildClassName(props);\n        if (this.MDComponent) {\n            cn += ' mdc-text-field--upgraded';\n        }\n        return cn;\n    }\n}\nTextFieldInput.defaultProps = {\n    valid: true\n};\nexport class TextField extends Component {\n    constructor() {\n        super(...arguments);\n        this.id = TextField.uid();\n    }\n    static uid() {\n        return ++this.uidCounter;\n    }\n    componentDidMount() {\n        this.setState({\n            jsComponentAttached: true\n        });\n    }\n    render(allprops) {\n        const { className, outerStyle, helperTextPersistent, helperTextValidationMsg } = allprops, props = __rest(allprops, [\"className\", \"outerStyle\", \"helperTextPersistent\", \"helperTextValidationMsg\"]);\n        const showDiv = props.helperText;\n        if ((props.helperText || props.label) && !props.id) {\n            props.id = `tf-${this.id}`;\n        }\n        // Helper text\n        const helperTextProps = {\n            persistent: helperTextPersistent,\n            'validation-msg': helperTextValidationMsg\n        };\n        return showDiv ? (h(\"div\", { className: className, style: outerStyle },\n            h(TextFieldInput, Object.assign({}, props, { onInit: MDComponent => {\n                    this.MDComponent = MDComponent;\n                }, \"aria-controls\": props.helperText && `${props.id}-helper-text` })),\n            props.helperText && (h(HelperText, Object.assign({ id: `${props.id}-helper-text` }, helperTextProps), props.helperText)))) : (h(TextFieldInput, Object.assign({}, props, { className: className, outerStyle: outerStyle, onInit: MDComponent => {\n                this.MDComponent = MDComponent;\n            } })));\n    }\n}\nTextField.uidCounter = 0;\nexport default class default_1 extends TextField {\n}\ndefault_1.HelperText = HelperText;\n//# sourceMappingURL=index.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-floating-label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-notched-outline',\n  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  TEXTAREA: 'mdc-text-field--textarea',\n  OUTLINED: 'mdc-text-field--outlined',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923,\n};\n\n// whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n// under section: `Validation-related attributes`\nconst VALIDATION_ATTR_WHITELIST = [\n  'pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength',\n];\n\n// Label should always float for these types as they show some UI even if value is empty.\nconst ALWAYS_FLOAT_TYPES = [\n  'color', 'date', 'datetime-local', 'month', 'range', 'time', 'week',\n];\n\nexport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST, ALWAYS_FLOAT_TYPES};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nclass MDCTextFieldHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the input validity.\n   * @param {boolean} inputIsValid\n   */\n  setValidity(inputIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCTextFieldHelperTextFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n  ICON_ROLE: 'button',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nclass MDCTextFieldIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldIconAdapter} */ ({\n      getAttr: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));\n\n    /** @private {string?} */\n    this.savedTabIndex_ = null;\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    this.savedTabIndex_ = this.adapter_.getAttr('tabindex');\n\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    if (!this.savedTabIndex_) {\n      return;\n    }\n\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n      this.adapter_.removeAttr('role');\n    } else {\n      this.adapter_.setAttr('tabindex', this.savedTabIndex_);\n      this.adapter_.setAttr('role', strings.ICON_ROLE);\n    }\n  }\n\n  /** @param {string} label */\n  setAriaLabel(label) {\n    this.adapter_.setAttr('aria-label', label);\n  }\n\n  /** @param {string} content */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCTextFieldIconFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\n/* eslint-enable no-unused-vars */\nimport {MDCTextFieldAdapter, NativeInputType, FoundationMapType} from './adapter';\nimport {cssClasses, strings, numbers, VALIDATION_ATTR_WHITELIST, ALWAYS_FLOAT_TYPES} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nclass MDCTextFieldFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {boolean} */\n  get shouldShake() {\n    return !this.isValid() && !this.isFocused_ && !!this.getValue();\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  get shouldAlwaysFloat_() {\n    const type = this.getNativeInput_().type;\n    return ALWAYS_FLOAT_TYPES.indexOf(type) >= 0;\n  }\n\n  /** @return {boolean} */\n  get shouldFloat() {\n    return this.shouldAlwaysFloat_ || this.isFocused_ || !!this.getValue() || this.isBadInput_();\n  }\n\n  /**\n   * {@see MDCTextFieldAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      registerTextFieldInteractionHandler: () => {},\n      deregisterTextFieldInteractionHandler: () => {},\n      registerInputInteractionHandler: () => {},\n      deregisterInputInteractionHandler: () => {},\n      registerValidationAttributeChangeHandler: () => {},\n      deregisterValidationAttributeChangeHandler: () => {},\n      getNativeInput: () => {},\n      isFocused: () => {},\n      isRtl: () => {},\n      activateLineRipple: () => {},\n      deactivateLineRipple: () => {},\n      setLineRippleTransformOrigin: () => {},\n      shakeLabel: () => {},\n      floatLabel: () => {},\n      hasLabel: () => {},\n      getLabelWidth: () => {},\n      hasOutline: () => {},\n      notchOutline: () => {},\n      closeOutline: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.icon_ = foundationMap.icon;\n\n    /** @private {boolean} */\n    this.isFocused_ = false;\n    /** @private {boolean} */\n    this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    this.isValid_ = true;\n\n    /** @private {boolean} */\n    this.useNativeValidation_ = true;\n\n    /** @private {function(): undefined} */\n    this.inputFocusHandler_ = () => this.activateFocus();\n    /** @private {function(): undefined} */\n    this.inputBlurHandler_ = () => this.deactivateFocus();\n    /** @private {function(): undefined} */\n    this.inputInputHandler_ = () => this.autoCompleteFocus();\n    /** @private {function(!Event): undefined} */\n    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);\n    /** @private {function(!Event): undefined} */\n    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();\n    /** @private {function(!Array): undefined} */\n    this.validationAttributeChangeHandler_ = (attributesList) => this.handleValidationAttributeChange(attributesList);\n\n    /** @private {!MutationObserver} */\n    this.validationObserver_;\n  }\n\n  init() {\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    } else if (this.adapter_.hasLabel() && this.shouldFloat) {\n      this.notchOutline(true);\n      this.adapter_.floatLabel(true);\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.validationObserver_ =\n        this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);\n  }\n\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  handleTextFieldInteraction() {\n    if (this.adapter_.getNativeInput().disabled) {\n      return;\n    }\n    this.receivedUserInput_ = true;\n  }\n\n  /**\n   * Handles validation attribute changes\n   * @param {!Array<string>} attributesList\n   */\n  handleValidationAttributeChange(attributesList) {\n    attributesList.some((attributeName) => {\n      if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n        this.styleValidity_(true);\n        return true;\n      }\n    });\n  }\n\n  /**\n   * Opens/closes the notched outline.\n   * @param {boolean} openNotch\n   */\n  notchOutline(openNotch) {\n    if (!this.adapter_.hasOutline()) {\n      return;\n    }\n\n    if (openNotch) {\n      const isDense = this.adapter_.hasClass(cssClasses.DENSE);\n      const labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n      const labelWidth = this.adapter_.getLabelWidth() * labelScale;\n      const isRtl = this.adapter_.isRtl();\n      this.adapter_.notchOutline(labelWidth, isRtl);\n    } else {\n      this.adapter_.closeOutline();\n    }\n  }\n\n  /**\n   * Activates the text field focus state.\n   */\n  activateFocus() {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   * @param {!Event} evt\n   */\n  setTransformOrigin(evt) {\n    const targetClientRect = evt.target.getBoundingClientRect();\n    const evtCoords = {x: evt.clientX, y: evt.clientY};\n    const normalizedX = evtCoords.x - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  }\n\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programatically).\n   */\n  autoCompleteFocus() {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  }\n\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  deactivateFocus() {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n    if (!this.shouldFloat) {\n      this.receivedUserInput_ = false;\n    }\n  }\n\n  /**\n   * @return {string} The value of the input Element.\n   */\n  getValue() {\n    return this.getNativeInput_().value;\n  }\n\n  /**\n   * @param {string} value The value to set on the input Element.\n   */\n  setValue(value) {\n    this.getNativeInput_().value = value;\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.adapter_.hasLabel()) {\n      this.notchOutline(this.shouldFloat);\n      this.adapter_.floatLabel(this.shouldFloat);\n      this.adapter_.shakeLabel(this.shouldShake);\n    }\n  }\n\n  /**\n   * @return {boolean} If a custom validity is set, returns that value.\n   *     Otherwise, returns the result of native validity checks.\n   */\n  isValid() {\n    return this.useNativeValidation_\n      ? this.isNativeInputValid_() : this.isValid_;\n  }\n\n  /**\n   * @param {boolean} isValid Sets the validity state of the Text Field.\n   */\n  setValid(isValid) {\n    this.isValid_ = isValid;\n    this.styleValidity_(isValid);\n\n    const shouldShake = !isValid && !this.isFocused_;\n    if (this.adapter_.hasLabel()) {\n      this.adapter_.shakeLabel(shouldShake);\n    }\n  }\n\n  /**\n   * Enables or disables the use of native validation. Use this for custom validation.\n   * @param {boolean} useNativeValidation Set this to false to ignore native input validation.\n   */\n  setUseNativeValidation(useNativeValidation) {\n    this.useNativeValidation_ = useNativeValidation;\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  isDisabled() {\n    return this.getNativeInput_().disabled;\n  }\n\n  /**\n   * @param {boolean} disabled Sets the text-field disabled or enabled.\n   */\n  setDisabled(disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  /**\n   * Sets the aria label of the icon.\n   * @param {string} label\n   */\n  setIconAriaLabel(label) {\n    if (this.icon_) {\n      this.icon_.setAriaLabel(label);\n    }\n  }\n\n  /**\n   * Sets the text content of the icon.\n   * @param {string} content\n   */\n  setIconContent(content) {\n    if (this.icon_) {\n      this.icon_.setContent(content);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field input fails in converting the\n   *     user-supplied value.\n   * @private\n   */\n  isBadInput_() {\n    return this.getNativeInput_().validity.badInput;\n  }\n\n  /**\n   * @return {boolean} The result of native validity checking\n   *     (ValidityState.valid).\n   */\n  isNativeInputValid_() {\n    return this.getNativeInput_().validity.valid;\n  }\n\n  /**\n   * Styles the component based on the validity state.\n   * @param {boolean} isValid\n   * @private\n   */\n  styleValidity_(isValid) {\n    const {INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  }\n\n  /**\n   * Styles the component based on the focused state.\n   * @param {boolean} isFocused\n   * @private\n   */\n  styleFocused_(isFocused) {\n    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  }\n\n  /**\n   * Styles the component based on the disabled state.\n   * @param {boolean} isDisabled\n   * @private\n   */\n  styleDisabled_(isDisabled) {\n    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n    if (this.icon_) {\n      this.icon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @return {!Element|!NativeInputType} The native text input from the\n   * host environment, or a dummy if none exists.\n   * @private\n   */\n  getNativeInput_() {\n    return this.adapter_.getNativeInput() ||\n    /** @type {!NativeInputType} */ ({\n      value: '',\n      disabled: false,\n      validity: {\n        badInput: false,\n        valid: true,\n      },\n    });\n  }\n}\n\nexport default MDCTextFieldFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setStyle: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport MDCLineRippleAdapter from './adapter';\nimport MDCLineRippleFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCLineRippleFoundation>}\n * @final\n */\nclass MDCLineRipple extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCLineRipple}\n   */\n  static attachTo(root) {\n    return new MDCLineRipple(root);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.foundation_.activate();\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  /**\n   * Sets the transform origin given a user's click location. The `rippleCenter` is the\n   * x-coordinate of the middle of the ripple.\n   * @param {number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    this.foundation_.setRippleCenter(xCoordinate);\n  }\n\n  /**\n   * @return {!MDCLineRippleFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCLineRippleFoundation(/** @type {!MDCLineRippleAdapter} */ (Object.assign({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      hasClass: (className) => this.root_.classList.contains(className),\n      setStyle: (propertyName, value) => this.root_.style[propertyName] = value,\n      registerEventHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),\n      deregisterEventHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),\n    })));\n  }\n}\n\nexport {MDCLineRipple, MDCLineRippleFoundation};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport MDCTextFieldHelperTextFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCTextFieldHelperTextFoundation>}\n * @final\n */\nclass MDCTextFieldHelperText extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCTextFieldHelperText}\n   */\n  static attachTo(root) {\n    return new MDCTextFieldHelperText(root);\n  }\n\n  /**\n   * @return {!MDCTextFieldHelperTextFoundation}\n   */\n  get foundation() {\n    return this.foundation_;\n  }\n\n  /**\n   * @return {!MDCTextFieldHelperTextFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCTextFieldHelperTextFoundation(/** @type {!MDCTextFieldHelperTextAdapter} */ (Object.assign({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      hasClass: (className) => this.root_.classList.contains(className),\n      setAttr: (attr, value) => this.root_.setAttribute(attr, value),\n      removeAttr: (attr) => this.root_.removeAttribute(attr),\n      setContent: (content) => {\n        this.root_.textContent = content;\n      },\n    })));\n  }\n}\n\nexport {MDCTextFieldHelperText, MDCTextFieldHelperTextFoundation};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport MDCTextFieldIconAdapter from './adapter';\nimport MDCTextFieldIconFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCTextFieldIconFoundation>}\n * @final\n */\nclass MDCTextFieldIcon extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCTextFieldIcon}\n   */\n  static attachTo(root) {\n    return new MDCTextFieldIcon(root);\n  }\n\n  /**\n   * @return {!MDCTextFieldIconFoundation}\n   */\n  get foundation() {\n    return this.foundation_;\n  }\n\n  /**\n   * @return {!MDCTextFieldIconFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCTextFieldIconFoundation(/** @type {!MDCTextFieldIconAdapter} */ (Object.assign({\n      getAttr: (attr) => this.root_.getAttribute(attr),\n      setAttr: (attr, value) => this.root_.setAttribute(attr, value),\n      removeAttr: (attr) => this.root_.removeAttribute(attr),\n      setContent: (content) => {\n        this.root_.textContent = content;\n      },\n      registerInteractionHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),\n      deregisterInteractionHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),\n      notifyIconAction: () => this.emit(\n        MDCTextFieldIconFoundation.strings.ICON_EVENT, {} /* evtData */, true /* shouldBubble */),\n    })));\n  }\n}\n\nexport {MDCTextFieldIcon, MDCTextFieldIconFoundation};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',\n  LABEL_SHAKE: 'mdc-floating-label--shake',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFloatingLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}\n * @final\n */\nclass MDCFloatingLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCFloatingLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCFloatingLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCFloatingLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake adds shake class if true,\n   * otherwise removes shake class.\n   */\n  shake(shouldShake) {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldShake) {\n      this.adapter_.addClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or dock.\n   * @param {boolean} shouldFloat adds float class if true, otherwise remove\n   * float and shake class to dock label.\n   */\n  float(shouldFloat) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    if (shouldFloat) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   */\n  handleShakeAnimationEnd_() {\n    const {LABEL_SHAKE} = MDCFloatingLabelFoundation.cssClasses;\n    this.adapter_.removeClass(LABEL_SHAKE);\n  }\n}\n\nexport default MDCFloatingLabelFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCFloatingLabelAdapter from './adapter';\nimport MDCFloatingLabelFoundation from './foundation';\n\n/**\n * @extends {MDCComponent<!MDCFloatingLabelFoundation>}\n * @final\n */\nclass MDCFloatingLabel extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCFloatingLabel}\n   */\n  static attachTo(root) {\n    return new MDCFloatingLabel(root);\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} shouldShake styles the label to shake by adding shake class\n   * if true, otherwise will stop shaking by removing shake class.\n   */\n  shake(shouldShake) {\n    this.foundation_.shake(shouldShake);\n  }\n\n  /**\n   * Styles label to float/dock.\n   * @param {boolean} shouldFloat styles the label to float by adding float class\n   * if true, otherwise docks the label by removing the float class.\n   */\n  float(shouldFloat) {\n    this.foundation_.float(shouldFloat);\n  }\n\n  /**\n   * @return {number}\n   */\n  getWidth() {\n    return this.foundation_.getWidth();\n  }\n\n  /**\n   * @return {!MDCFloatingLabelFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCFloatingLabelFoundation({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      getWidth: () => this.root_.offsetWidth,\n      registerInteractionHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),\n      deregisterInteractionHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),\n    });\n  }\n}\n\nexport {MDCFloatingLabel, MDCFloatingLabelFoundation};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst strings = {\n  PATH_SELECTOR: '.mdc-notched-outline__path',\n  IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  OUTLINE_NOTCHED: 'mdc-notched-outline--notched',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCNotchedOutlineAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}\n * @final\n */\nclass MDCNotchedOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCNotchedOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCNotchedOutlineAdapter} */ ({\n      getWidth: () => {},\n      getHeight: () => {},\n      addClass: () => {},\n      removeClass: () => {},\n      setOutlinePathAttr: () => {},\n      getIdleOutlineStyleValue: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCNotchedOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Adds the outline notched selector and updates the notch width\n   * calculated based off of notchWidth and isRtl.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   */\n  notch(notchWidth, isRtl = false) {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.addClass(OUTLINE_NOTCHED);\n    this.updateSvgPath_(notchWidth, isRtl);\n  }\n\n  /**\n   * Removes notched outline selector to close the notch in the outline.\n   */\n  closeNotch() {\n    const {OUTLINE_NOTCHED} = MDCNotchedOutlineFoundation.cssClasses;\n    this.adapter_.removeClass(OUTLINE_NOTCHED);\n  }\n\n  /**\n   * Updates the SVG path of the focus outline element based on the notchWidth\n   * and the RTL context.\n   * @param {number} notchWidth\n   * @param {boolean=} isRtl\n   * @private\n   */\n  updateSvgPath_(notchWidth, isRtl) {\n    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||\n        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n    const radius = parseFloat(radiusStyleValue);\n    const width = this.adapter_.getWidth();\n    const height = this.adapter_.getHeight();\n    const cornerWidth = radius + 1.2;\n    const leadingStrokeLength = Math.abs(12 - cornerWidth);\n\n    // If the notchWidth is 0, the the notched outline doesn't need to add padding.\n    let paddedNotchWidth = 0;\n    if (notchWidth > 0) {\n      paddedNotchWidth = notchWidth + 8;\n    }\n\n    // The right, bottom, and left sides of the outline follow the same SVG path.\n    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      + 'v' + (height - (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      + 'h' + (-width + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      + 'v' + (-height + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n    let path;\n    if (!isRtl) {\n      path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength)\n        + pathMiddle\n        + 'h' + leadingStrokeLength;\n    } else {\n      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1\n        + 'h' + leadingStrokeLength\n        + pathMiddle\n        + 'h' + (width - (2 * cornerWidth) - paddedNotchWidth - leadingStrokeLength);\n    }\n\n    this.adapter_.setOutlinePathAttr(path);\n  }\n}\n\nexport default MDCNotchedOutlineFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n\nimport MDCNotchedOutlineAdapter from './adapter';\nimport MDCNotchedOutlineFoundation from './foundation';\nimport {strings} from './constants';\n\n/**\n * @extends {MDCComponent<!MDCNotchedOutlineFoundation>}\n * @final\n */\nclass MDCNotchedOutline extends MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCNotchedOutline}\n   */\n  static attachTo(root) {\n    return new MDCNotchedOutline(root);\n  }\n\n  /**\n    * Updates outline selectors and SVG path to open notch.\n    * @param {number} notchWidth The notch width in the outline.\n    * @param {boolean=} isRtl Determines if outline is rtl. If rtl is true, notch\n    * will be right justified in outline path, otherwise left justified.\n    */\n  notch(notchWidth, isRtl) {\n    this.foundation_.notch(notchWidth, isRtl);\n  }\n\n  /**\n   * Updates the outline selectors to close notch and return it to idle state.\n   */\n  closeNotch() {\n    this.foundation_.closeNotch();\n  }\n\n  /**\n   * @return {!MDCNotchedOutlineFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCNotchedOutlineFoundation({\n      getWidth: () => this.root_.offsetWidth,\n      getHeight: () => this.root_.offsetHeight,\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      setOutlinePathAttr: (value) => {\n        const path = this.root_.querySelector(strings.PATH_SELECTOR);\n        path.setAttribute('d', value);\n      },\n      getIdleOutlineStyleValue: (propertyName) => {\n        const idleOutlineElement = this.root_.parentNode.querySelector(strings.IDLE_OUTLINE_SELECTOR);\n        return window.getComputedStyle(idleOutlineElement).getPropertyValue(propertyName);\n      },\n    });\n  }\n}\n\nexport {MDCNotchedOutline, MDCNotchedOutlineFoundation};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n/* eslint-disable no-unused-vars */\nimport {MDCRipple, MDCRippleFoundation, RippleCapableSurface} from '@material/ripple/index';\n/* eslint-enable no-unused-vars */\nimport {getMatchesProperty} from '@material/ripple/util';\n\n\nimport {cssClasses, strings} from './constants';\nimport {MDCTextFieldAdapter, FoundationMapType} from './adapter';\nimport MDCTextFieldFoundation from './foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCLineRipple, MDCLineRippleFoundation} from '@material/line-ripple/index';\nimport {MDCTextFieldHelperText, MDCTextFieldHelperTextFoundation} from './helper-text/index';\nimport {MDCTextFieldIcon, MDCTextFieldIconFoundation} from './icon/index';\nimport {MDCFloatingLabel, MDCFloatingLabelFoundation} from '@material/floating-label/index';\nimport {MDCNotchedOutline, MDCNotchedOutlineFoundation} from '@material/notched-outline/index';\n/* eslint-enable no-unused-vars */\n\n/**\n * @extends {MDCComponent<!MDCTextFieldFoundation>}\n * @final\n */\nclass MDCTextField extends MDCComponent {\n  /**\n   * @param {...?} args\n   */\n  constructor(...args) {\n    super(...args);\n    /** @private {?Element} */\n    this.input_;\n    /** @type {?MDCRipple} */\n    this.ripple;\n    /** @private {?MDCLineRipple} */\n    this.lineRipple_;\n    /** @private {?MDCTextFieldHelperText} */\n    this.helperText_;\n    /** @private {?MDCTextFieldIcon} */\n    this.icon_;\n    /** @private {?MDCFloatingLabel} */\n    this.label_;\n    /** @private {?MDCNotchedOutline} */\n    this.outline_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCTextField}\n   */\n  static attachTo(root) {\n    return new MDCTextField(root);\n  }\n\n  /**\n   * @param {(function(!Element): !MDCRipple)=} rippleFactory A function which\n   * creates a new MDCRipple.\n   * @param {(function(!Element): !MDCLineRipple)=} lineRippleFactory A function which\n   * creates a new MDCLineRipple.\n   * @param {(function(!Element): !MDCTextFieldHelperText)=} helperTextFactory A function which\n   * creates a new MDCTextFieldHelperText.\n   * @param {(function(!Element): !MDCTextFieldIcon)=} iconFactory A function which\n   * creates a new MDCTextFieldIcon.\n   * @param {(function(!Element): !MDCFloatingLabel)=} labelFactory A function which\n   * creates a new MDCFloatingLabel.\n   * @param {(function(!Element): !MDCNotchedOutline)=} outlineFactory A function which\n   * creates a new MDCNotchedOutline.\n   */\n  initialize(\n    rippleFactory = (el, foundation) => new MDCRipple(el, foundation),\n    lineRippleFactory = (el) => new MDCLineRipple(el),\n    helperTextFactory = (el) => new MDCTextFieldHelperText(el),\n    iconFactory = (el) => new MDCTextFieldIcon(el),\n    labelFactory = (el) => new MDCFloatingLabel(el),\n    outlineFactory = (el) => new MDCNotchedOutline(el)) {\n    this.input_ = this.root_.querySelector(strings.INPUT_SELECTOR);\n    const labelElement = this.root_.querySelector(strings.LABEL_SELECTOR);\n    if (labelElement) {\n      this.label_ = labelFactory(labelElement);\n    }\n    const lineRippleElement = this.root_.querySelector(strings.LINE_RIPPLE_SELECTOR);\n    if (lineRippleElement) {\n      this.lineRipple_ = lineRippleFactory(lineRippleElement);\n    }\n    const outlineElement = this.root_.querySelector(strings.OUTLINE_SELECTOR);\n    if (outlineElement) {\n      this.outline_ = outlineFactory(outlineElement);\n    }\n    if (this.input_.hasAttribute(strings.ARIA_CONTROLS)) {\n      const helperTextElement = document.getElementById(this.input_.getAttribute(strings.ARIA_CONTROLS));\n      if (helperTextElement) {\n        this.helperText_ = helperTextFactory(helperTextElement);\n      }\n    }\n    const iconElement = this.root_.querySelector(strings.ICON_SELECTOR);\n    if (iconElement) {\n      this.icon_ = iconFactory(iconElement);\n    }\n\n    this.ripple = null;\n    if (!this.root_.classList.contains(cssClasses.TEXTAREA) && !this.root_.classList.contains(cssClasses.OUTLINED)) {\n      const MATCHES = getMatchesProperty(HTMLElement.prototype);\n      const adapter =\n        Object.assign(MDCRipple.createAdapter(/** @type {!RippleCapableSurface} */ (this)), {\n          isSurfaceActive: () => this.input_[MATCHES](':active'),\n          registerInteractionHandler: (type, handler) => this.input_.addEventListener(type, handler),\n          deregisterInteractionHandler: (type, handler) => this.input_.removeEventListener(type, handler),\n        });\n      const foundation = new MDCRippleFoundation(adapter);\n      this.ripple = rippleFactory(this.root_, foundation);\n    }\n  }\n\n  destroy() {\n    if (this.ripple) {\n      this.ripple.destroy();\n    }\n    if (this.lineRipple_) {\n      this.lineRipple_.destroy();\n    }\n    if (this.helperText_) {\n      this.helperText_.destroy();\n    }\n    if (this.icon_) {\n      this.icon_.destroy();\n    }\n    if (this.label_) {\n      this.label_.destroy();\n    }\n    if (this.outline_) {\n      this.outline_.destroy();\n    }\n    super.destroy();\n  }\n\n  /**\n   * Initiliazes the Text Field's internal state based on the environment's\n   * state.\n   */\n  initialSyncWithDom() {\n    this.disabled = this.input_.disabled;\n  }\n\n  /**\n   * @return {string} The value of the input.\n   */\n  get value() {\n    return this.foundation_.getValue();\n  }\n\n  /**\n   * @param {string} value The value to set on the input.\n   */\n  set value(value) {\n    this.foundation_.setValue(value);\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  get disabled() {\n    return this.foundation_.isDisabled();\n  }\n\n  /**\n   * @param {boolean} disabled Sets the Text Field disabled or enabled.\n   */\n  set disabled(disabled) {\n    this.foundation_.setDisabled(disabled);\n  }\n\n  /**\n   * @return {boolean} valid True if the Text Field is valid.\n   */\n  get valid() {\n    return this.foundation_.isValid();\n  }\n\n  /**\n   * @param {boolean} valid Sets the Text Field valid or invalid.\n   */\n  set valid(valid) {\n    this.foundation_.setValid(valid);\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is required.\n   */\n  get required() {\n    return this.input_.required;\n  }\n\n  /**\n   * @param {boolean} required Sets the Text Field to required.\n   */\n  set required(required) {\n    this.input_.required = required;\n  }\n\n  /**\n   * @return {string} The input element's validation pattern.\n   */\n  get pattern() {\n    return this.input_.pattern;\n  }\n\n  /**\n   * @param {string} pattern Sets the input element's validation pattern.\n   */\n  set pattern(pattern) {\n    this.input_.pattern = pattern;\n  }\n\n  /**\n   * @return {number} The input element's minLength.\n   */\n  get minLength() {\n    return this.input_.minLength;\n  }\n\n  /**\n   * @param {number} minLength Sets the input element's minLength.\n   */\n  set minLength(minLength) {\n    this.input_.minLength = minLength;\n  }\n\n  /**\n   * @return {number} The input element's maxLength.\n   */\n  get maxLength() {\n    return this.input_.maxLength;\n  }\n\n  /**\n   * @param {number} maxLength Sets the input element's maxLength.\n   */\n  set maxLength(maxLength) {\n    // Chrome throws exception if maxLength is set < 0\n    if (maxLength < 0) {\n      this.input_.removeAttribute('maxLength');\n    } else {\n      this.input_.maxLength = maxLength;\n    }\n  }\n\n  /**\n   * @return {string} The input element's min.\n   */\n  get min() {\n    return this.input_.min;\n  }\n\n  /**\n   * @param {string} min Sets the input element's min.\n   */\n  set min(min) {\n    this.input_.min = min;\n  }\n\n  /**\n   * @return {string} The input element's max.\n   */\n  get max() {\n    return this.input_.max;\n  }\n\n  /**\n   * @param {string} max Sets the input element's max.\n   */\n  set max(max) {\n    this.input_.max = max;\n  }\n\n  /**\n   * @return {string} The input element's step.\n   */\n  get step() {\n    return this.input_.step;\n  }\n\n  /**\n   * @param {string} step Sets the input element's step.\n   */\n  set step(step) {\n    this.input_.step = step;\n  }\n\n  /**\n   * Sets the helper text element content.\n   * @param {string} content\n   */\n  set helperTextContent(content) {\n    this.foundation_.setHelperTextContent(content);\n  }\n\n  /**\n   * Sets the aria label of the icon.\n   * @param {string} label\n   */\n  set iconAriaLabel(label) {\n    this.foundation_.setIconAriaLabel(label);\n  }\n\n  /**\n   * Sets the text content of the icon.\n   * @param {string} content\n   */\n  set iconContent(content) {\n    this.foundation_.setIconContent(content);\n  }\n\n  /**\n   * Enables or disables the use of native validation. Use this for custom validation.\n   * @param {boolean} useNativeValidation Set this to false to ignore native input validation.\n   */\n  set useNativeValidation(useNativeValidation) {\n    this.foundation_.setUseNativeValidation(useNativeValidation);\n  }\n\n  /**\n   * Recomputes the outline SVG path for the outline element.\n   */\n  layout() {\n    const openNotch = this.foundation_.shouldFloat;\n    this.foundation_.notchOutline(openNotch);\n  }\n\n  /**\n   * @return {!MDCTextFieldFoundation}\n   */\n  getDefaultFoundation() {\n    return new MDCTextFieldFoundation(\n      /** @type {!MDCTextFieldAdapter} */ (Object.assign({\n        addClass: (className) => this.root_.classList.add(className),\n        removeClass: (className) => this.root_.classList.remove(className),\n        hasClass: (className) => this.root_.classList.contains(className),\n        registerTextFieldInteractionHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),\n        deregisterTextFieldInteractionHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),\n        registerValidationAttributeChangeHandler: (handler) => {\n          const getAttributesList = (mutationsList) => mutationsList.map((mutation) => mutation.attributeName);\n          const observer = new MutationObserver((mutationsList) => handler(getAttributesList(mutationsList)));\n          const targetNode = this.root_.querySelector(strings.INPUT_SELECTOR);\n          const config = {attributes: true};\n          observer.observe(targetNode, config);\n          return observer;\n        },\n        deregisterValidationAttributeChangeHandler: (observer) => observer.disconnect(),\n        isFocused: () => {\n          return document.activeElement === this.root_.querySelector(strings.INPUT_SELECTOR);\n        },\n        isRtl: () => window.getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl',\n      },\n      this.getInputAdapterMethods_(),\n      this.getLabelAdapterMethods_(),\n      this.getLineRippleAdapterMethods_(),\n      this.getOutlineAdapterMethods_())),\n      this.getFoundationMap_());\n  }\n\n  /**\n   * @return {!{\n   *   shakeLabel: function(boolean): undefined,\n   *   floatLabel: function(boolean): undefined,\n   *   hasLabel: function(): boolean,\n   *   getLabelWidth: function(): number,\n   * }}\n   */\n  getLabelAdapterMethods_() {\n    return {\n      shakeLabel: (shouldShake) => this.label_.shake(shouldShake),\n      floatLabel: (shouldFloat) => this.label_.float(shouldFloat),\n      hasLabel: () => !!this.label_,\n      getLabelWidth: () => this.label_.getWidth(),\n    };\n  }\n\n  /**\n   * @return {!{\n   *   activateLineRipple: function(): undefined,\n   *   deactivateLineRipple: function(): undefined,\n   *   setLineRippleTransformOrigin: function(number): undefined,\n   * }}\n   */\n  getLineRippleAdapterMethods_() {\n    return {\n      activateLineRipple: () => {\n        if (this.lineRipple_) {\n          this.lineRipple_.activate();\n        }\n      },\n      deactivateLineRipple: () => {\n        if (this.lineRipple_) {\n          this.lineRipple_.deactivate();\n        }\n      },\n      setLineRippleTransformOrigin: (normalizedX) => {\n        if (this.lineRipple_) {\n          this.lineRipple_.setRippleCenter(normalizedX);\n        }\n      },\n    };\n  }\n\n  /**\n   * @return {!{\n   *   notchOutline: function(number, boolean): undefined,\n   *   hasOutline: function(): boolean,\n   * }}\n   */\n  getOutlineAdapterMethods_() {\n    return {\n      notchOutline: (labelWidth, isRtl) => this.outline_.notch(labelWidth, isRtl),\n      closeOutline: () => this.outline_.closeNotch(),\n      hasOutline: () => !!this.outline_,\n    };\n  }\n\n  /**\n   * @return {!{\n   *   registerInputInteractionHandler: function(string, function()): undefined,\n   *   deregisterInputInteractionHandler: function(string, function()): undefined,\n   *   getNativeInput: function(): ?Element,\n   * }}\n   */\n  getInputAdapterMethods_() {\n    return {\n      registerInputInteractionHandler: (evtType, handler) => this.input_.addEventListener(evtType, handler),\n      deregisterInputInteractionHandler: (evtType, handler) => this.input_.removeEventListener(evtType, handler),\n      getNativeInput: () => this.input_,\n    };\n  }\n\n  /**\n   * Returns a map of all subcomponents to subfoundations.\n   * @return {!FoundationMapType}\n   */\n  getFoundationMap_() {\n    return {\n      helperText: this.helperText_ ? this.helperText_.foundation : undefined,\n      icon: this.icon_ ? this.icon_.foundation : undefined,\n    };\n  }\n}\n\nexport {MDCTextField, MDCTextFieldFoundation,\n  MDCTextFieldHelperText, MDCTextFieldHelperTextFoundation,\n  MDCTextFieldIcon, MDCTextFieldIconFoundation};\n"],"sourceRoot":""}