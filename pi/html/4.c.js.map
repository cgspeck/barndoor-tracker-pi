{"version":3,"sources":["webpack:///./routes/ap_settings/style.css","webpack:///./routes/ap_settings/index.js","webpack:///../esm/themeUtils/generateThemeClass.js","webpack:///../src/index.js","webpack:///../node_modules/dlv/index.js","webpack:///../esm/Button/index.js"],"names":["module","exports","APSettings","state","apSettings","ssid","key","error","info","handleError","e","console","setState","onSubmit","preventDefault","setAPSettings","then","catch","componentDidMount","getAPSettings","r","errorToast","this","toString","infoToast","render","class","style","ap","bind","label","value","onInput","linkState","raised","ripple","onClick","Component","component","eventPath","let","path","split","cache","__lsc","t","target","obj","v","def","p","length","undefined","delve","nodeName","type","match","checked","i","ButtonIcon","Icon","Button","props","ButtonElement","className","themeProp","h","ref","setControlRef","MaterialComponent","default_1"],"mappings":"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","file":"4.c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ap\":\"ap__2RR5o\"};","import { h, Component } from 'preact';\nimport linkState from 'linkstate';\n\nimport Button from 'preact-material-components/Button';\nimport TextField from 'preact-material-components/TextField';\nimport 'preact-material-components/Button/style.css';\nimport 'preact-material-components/TextField/style.css';\nimport style from './style';\n\nimport { getAPSettings, setAPSettings } from '../../lib/settings';\n\nexport default class APSettings extends Component {\n\tstate = {\n\t\tapSettings: {\n\t\t\tssid: null,\n\t\t\tkey: null\n\t\t},\n\t\terror: null,\n\t\tinfo: null,\n\t};\n\n\tasync componentDidMount() {\n\t\tgetAPSettings()\n\t\t\t.then(r => this.setState({ apSettings: {...r} }))\n\t\t\t.catch(e => this.handleError(e));\n\t}\n\n\thandleError = e => {\n\t\tconsole.error('problem', e)\n\t\tthis.setState({error: e});\n\t}\n\n\tonSubmit = e => {\n\t\te.preventDefault();\n\t\tthis.setState({error: null, info: null});\n\t\tconst { ssid, key } = this.state.apSettings;\n\t\tsetAPSettings(ssid, key)\n\t\t\t.then(r => this.setState({ info: \"AP settings updated, device will restart soon\" }))\n\t\t\t.catch(e => this.handleError(e));\n  }\n\n\terrorToast() {\n\t\tif (this.state.error != null) {\n\t\t\treturn(\n\t\t\t\t<p>\n\t\t\t\t\t{ this.state.error.toString() }\n\t\t\t\t</p>\n\t\t\t)\n\t\t}\n\t}\n\n\tinfoToast() {\n\t\tif (this.state.info != null) {\n\t\t\treturn(\n\t\t\t\t<p>\n\t\t\t\t\t{ this.state.info.toString() }\n\t\t\t\t</p>\n\t\t\t)\n\t\t}\n\t}\n\n\trender({}, { apSettings }) {\n\t\treturn(\n\t\t\t<div class={style.ap}>\n\t\t\t\t<h1>Access Point Settings</h1>\n\t\t\t\t{this.infoToast()}\n\t\t\t\t{this.errorToast()}\n\t\t\t\t<form onSubmit={this.onSubmit.bind(this)}>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<TextField label=\"SSID\" value={apSettings.ssid} onInput={linkState(this, 'apSettings.ssid')}></TextField>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<TextField label=\"Key\" value={apSettings.key} onInput={linkState(this, 'apSettings.key')}></TextField>\n\t\t\t\t\t</p>\n\t\t\t\t\t<Button raised ripple onClick={this.onSubmit.bind(this)}>Update</Button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n};\n","export default function (prop) {\n    return `mdc-theme--${prop}-bg`;\n}\n//# sourceMappingURL=generateThemeClass.js.map","import delve from 'dlv';\n\n/** Create an Event handler function that sets a given state property.\n *\t@param {Component} component\tThe component whose state should be updated\n *\t@param {string} key\t\t\t\tA dot-notated key path to update in the component's state\n *\t@param {string} eventPath\t\tA dot-notated key path to the value that should be retrieved from the Event or component\n *\t@returns {function} linkedStateHandler\n */\nexport default function linkState(component, key, eventPath) {\n\tlet path = key.split('.'),\n\t\tcache = component.__lsc || (component.__lsc = {});\n\n\treturn cache[key+eventPath] || (cache[key+eventPath] = function(e) {\n\t\tlet t = e && e.target || this,\n\t\t\tstate = {},\n\t\t\tobj = state,\n\t\t\tv = typeof eventPath==='string' ? delve(e, eventPath) : t.nodeName ? (t.type.match(/^che|rad/) ? t.checked : t.value) : e,\n\t\t\ti = 0;\n\t\tfor ( ; i<path.length-1; i++) {\n\t\t\tobj = obj[path[i]] || (obj[path[i]] = !i && component.state[path[i]] || {});\n\t\t}\n\t\tobj[path[i]] = v;\n\t\tcomponent.setState(state);\n\t});\n}\n","export default function dlv(obj, key, def, p) {\n\tp = 0;\n\tkey = key.split ? key.split('.') : key;\n\twhile (obj && p<key.length) obj = obj[key[p++]];\n\treturn obj===undefined ? def : obj;\n}","import { h } from 'preact';\nimport MaterialComponent from '../Base/MaterialComponent';\nimport Icon from '../Icon';\nimport generateThemeClass from '../themeUtils/generateThemeClass';\nexport class ButtonIcon extends Icon {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'button__icon';\n    }\n}\nexport class Button extends MaterialComponent {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'button';\n        this.mdcProps = ['dense', 'raised', 'unelevated', 'outlined'];\n        this.themeProps = ['primary', 'secondary'];\n    }\n    materialDom(props) {\n        const ButtonElement = props.href ? 'a' : 'button';\n        let className = '';\n        this.themeProps.forEach(themeProp => {\n            if (themeProp in props && props[themeProp] !== false) {\n                className += generateThemeClass(themeProp) + ' ';\n            }\n        });\n        return (h(ButtonElement, Object.assign({ ref: this.setControlRef }, props, { className: className }), this.props.children));\n    }\n}\nexport default class default_1 extends Button {\n}\ndefault_1.Icon = ButtonIcon;\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}