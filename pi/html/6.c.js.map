{"version":3,"sources":["webpack:///./routes/location_settings/style.css","webpack:///./routes/location_settings/index.js","webpack:///../esm/themeUtils/generateThemeClass.js","webpack:///../src/index.js","webpack:///../node_modules/dlv/index.js","webpack:///../esm/Button/index.js"],"names":["module","exports","LocationSettings","state","locationSettings","latitude","magDeclination","azError","altError","xOffset","yOffset","zOffset","error","info","handleError","e","console","setState","onSubmit","preventDefault","setLocationSettings","then","catch","componentDidMount","getLocationSettings","r","errorToast","this","toString","infoToast","render","class","style","ap","bind","label","value","onInput","linkState","raised","ripple","onClick","Component","component","key","eventPath","let","path","split","cache","__lsc","t","target","obj","v","def","p","length","undefined","delve","nodeName","type","match","checked","i","ButtonIcon","Icon","Button","props","ButtonElement","className","themeProp","h","ref","setControlRef","MaterialComponent","default_1"],"mappings":"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","file":"6.c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ap\":\"ap__1InSA\"};","import { h, Component } from \"preact\";\nimport linkState from \"linkstate\";\n\nimport Button from \"preact-material-components/Button\";\nimport \"preact-material-components/Button/style.css\";\nimport TextField from \"preact-material-components/TextField\";\nimport \"preact-material-components/TextField/style.css\";\n\nimport style from \"./style\";\n\nimport { getLocationSettings, setLocationSettings } from \"../../lib/settings\";\n\nexport default class LocationSettings extends Component {\n  state = {\n    locationSettings: {\n      latitude: null,\n      magDeclination: null,\n      azError: null,\n      altError: null,\n      xOffset: null,\n      yOffset: null,\n      zOffset: null\n    },\n    error: null,\n    info: null\n  };\n\n  async componentDidMount() {\n    getLocationSettings()\n      .then(r => this.setState({ locationSettings: { ...r } }))\n      .catch(e => this.handleError(e));\n  }\n\n  handleError = e => {\n    console.error(\"problem\", e);\n    this.setState({ error: e });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.setState({ error: null, info: null });\n    const {\n      latitude,\n      magDeclination,\n      azError,\n      altError,\n      xOffset,\n      yOffset,\n      zOffset\n    } = this.state.locationSettings;\n    setLocationSettings(\n      latitude,\n      magDeclination,\n      azError,\n      altError,\n      xOffset,\n      yOffset,\n      zOffset\n    )\n      .then(r => this.setState({ info: \"Location settings updated.\" }))\n      .catch(e => this.handleError(e));\n  };\n\n  errorToast() {\n    if (this.state.error != null) {\n      return <p>{this.state.error.toString()}</p>;\n    }\n  }\n\n  infoToast() {\n    if (this.state.info != null) {\n      return <p>{this.state.info.toString()}</p>;\n    }\n  }\n\n  render({}, { locationSettings }) {\n    return (\n      <div class={style.ap}>\n        <h1>Location Settings</h1>\n        {this.infoToast()}\n        {this.errorToast()}\n        <form onSubmit={this.onSubmit.bind(this)}>\n          <h2>Basic Settings</h2>\n          <p>\n            <TextField\n              label=\"Latitude (Decimal degrees)\"\n              value={locationSettings.latitude}\n              onInput={linkState(this, \"locationSettings.latitude\")}\n            ></TextField>\n          </p>\n          <p>\n            <TextField\n              label=\"Magnetic Declination\"\n              value={locationSettings.magDeclination}\n              onInput={linkState(this, \"locationSettings.magDeclination\")}\n            ></TextField>\n          </p>\n\n          <h2>Advanced Settings</h2>\n          <p>How many degrees over or under is permissable for alignment.</p>\n          <p>\n            <TextField\n              label=\"Azimuth Error\"\n              value={locationSettings.azError}\n              onInput={linkState(this, \"locationSettings.azError\")}\n            ></TextField>\n          </p>\n          <p>\n            <TextField\n              label=\"Altitude Error\"\n              value={locationSettings.altError}\n              onInput={linkState(this, \"locationSettings.altError\")}\n            ></TextField>\n          </p>\n          <p>\n            Change these settings only if the device does not show zero pitch\n            when laying flat and level and zero degrees pointed in the direction\n            of the magnetic north or south pole.\n          </p>\n          <p>\n            <TextField\n              label=\"X offset\"\n              value={locationSettings.xOffset}\n              onInput={linkState(this, \"locationSettings.xOffset\")}\n            ></TextField>\n          </p>\n          <p>\n            <TextField\n              label=\"Y offset\"\n              value={locationSettings.yOffset}\n              onInput={linkState(this, \"locationSettings.yOffset\")}\n            ></TextField>\n          </p>\n          <p>\n            <TextField\n              label=\"Z offset\"\n              value={locationSettings.zOffset}\n              onInput={linkState(this, \"locationSettings.zOffset\")}\n            ></TextField>\n          </p>\n          <Button raised ripple onClick={this.onSubmit.bind(this)}>\n            Update\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n","export default function (prop) {\n    return `mdc-theme--${prop}-bg`;\n}\n//# sourceMappingURL=generateThemeClass.js.map","import delve from 'dlv';\n\n/** Create an Event handler function that sets a given state property.\n *\t@param {Component} component\tThe component whose state should be updated\n *\t@param {string} key\t\t\t\tA dot-notated key path to update in the component's state\n *\t@param {string} eventPath\t\tA dot-notated key path to the value that should be retrieved from the Event or component\n *\t@returns {function} linkedStateHandler\n */\nexport default function linkState(component, key, eventPath) {\n\tlet path = key.split('.'),\n\t\tcache = component.__lsc || (component.__lsc = {});\n\n\treturn cache[key+eventPath] || (cache[key+eventPath] = function(e) {\n\t\tlet t = e && e.target || this,\n\t\t\tstate = {},\n\t\t\tobj = state,\n\t\t\tv = typeof eventPath==='string' ? delve(e, eventPath) : t.nodeName ? (t.type.match(/^che|rad/) ? t.checked : t.value) : e,\n\t\t\ti = 0;\n\t\tfor ( ; i<path.length-1; i++) {\n\t\t\tobj = obj[path[i]] || (obj[path[i]] = !i && component.state[path[i]] || {});\n\t\t}\n\t\tobj[path[i]] = v;\n\t\tcomponent.setState(state);\n\t});\n}\n","export default function dlv(obj, key, def, p) {\n\tp = 0;\n\tkey = key.split ? key.split('.') : key;\n\twhile (obj && p<key.length) obj = obj[key[p++]];\n\treturn obj===undefined ? def : obj;\n}","import { h } from 'preact';\nimport MaterialComponent from '../Base/MaterialComponent';\nimport Icon from '../Icon';\nimport generateThemeClass from '../themeUtils/generateThemeClass';\nexport class ButtonIcon extends Icon {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'button__icon';\n    }\n}\nexport class Button extends MaterialComponent {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'button';\n        this.mdcProps = ['dense', 'raised', 'unelevated', 'outlined'];\n        this.themeProps = ['primary', 'secondary'];\n    }\n    materialDom(props) {\n        const ButtonElement = props.href ? 'a' : 'button';\n        let className = '';\n        this.themeProps.forEach(themeProp => {\n            if (themeProp in props && props[themeProp] !== false) {\n                className += generateThemeClass(themeProp) + ' ';\n            }\n        });\n        return (h(ButtonElement, Object.assign({ ref: this.setControlRef }, props, { className: className }), this.props.children));\n    }\n}\nexport default class default_1 extends Button {\n}\ndefault_1.Icon = ButtonIcon;\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}