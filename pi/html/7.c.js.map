{"version":3,"sources":["webpack:///./routes/track/style.css","webpack:///./routes/track/index.js","webpack:///../node_modules/@material/switch/constants.js","webpack:///../node_modules/@material/switch/foundation.js","webpack:///../node_modules/@material/switch/index.js","webpack:///../esm/Switch/index.js","webpack:///../esm/themeUtils/generateThemeClass.js","webpack:///../esm/Button/index.js"],"names":["module","exports","Track","class","style","track","raised","ripple","onClick","e","prevent_default","label","value","cssClasses","CHECKED","DISABLED","strings","NATIVE_CONTROL_SELECTOR","RIPPLE_SURFACE_SELECTOR","MDCSwitchFoundation","adapter","defaultAdapter","addClass","removeClass","setNativeControlChecked","setNativeControlDisabled","setChecked","checked","this","adapter_","updateCheckedStyling_","setDisabled","disabled","handleChange","evt","target","MDCFoundation","MDCSwitch","args","ripple_","initRipple_","attachTo","root","destroy","nativeControl_","removeEventListener","changeHandler_","initialSyncWithDOM","foundation_","bind","addEventListener","rippleSurface","root_","querySelector","MATCHES","getMatchesProperty","HTMLElement","prototype","MDCRipple","createAdapter","isUnbounded","isSurfaceActive","className","classList","add","remove","registerInteractionHandler","type","handler","deregisterInteractionHandler","updateCssVariable","varName","setProperty","computeBoundingRect","getBoundingClientRect","foundation","MDCRippleFoundation","getDefaultFoundation","MDCComponent","__rest","s","t","Object","i","p","Switch","allprops","props","h","ref","setControlRef","id","role","MaterialComponent","ButtonIcon","Icon","Button","ButtonElement","themeProp","default_1"],"mappings":"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","file":"7.c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"track\":\"track__1MheK\"};","import { h } from \"preact\";\nimport style from \"./style\";\n\nimport Button from \"preact-material-components/Button\";\nimport \"preact-material-components/Button/style.css\";\nimport Switch from \"preact-material-components/Switch\";\nimport \"preact-material-components/Switch/style.css\";\nimport TextField from \"preact-material-components/TextField\";\nimport \"preact-material-components/TextField/style.css\";\n\nconst Track = () => (\n  <div class={style.track}>\n    <h1>Track</h1>\n    <div>\n      <h2>Control</h2>\n      <p>\n        <Button raised ripple onClick={e => e.prevent_default}>\n          Track\n        </Button>\n      </p>\n      <p>\n        <Button raised ripple onClick={e => e.prevent_default}>\n          Start\n        </Button>\n      </p>\n      <p>\n        <TextField label=\"Tracking time (minutes)\" value=\"300\"></TextField>\n      </p>\n      <p>\n        <Button raised ripple onClick={e => e.prevent_default}>\n          Stop\n        </Button>\n      </p>\n    </div>\n    <div>\n      <h2>Intervalometer</h2>\n      <p>\n        Enabled: <Switch></Switch>\n      </p>\n      <p>\n        <TextField label=\"Bulb (seconds)\" value=\"15\"></TextField>\n      </p>\n      <p>\n        <TextField label=\"Rest (seconds)\" value=\"15\"></TextField>\n      </p>\n    </div>\n    <div>\n      <h2>Dew Heater</h2>\n      Enabled: <Switch></Switch>\n    </div>\n  </div>\n);\n\nexport default Track;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  CHECKED: 'mdc-switch--checked',\n  DISABLED: 'mdc-switch--disabled',\n};\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: '.mdc-switch__native-control',\n  RIPPLE_SURFACE_SELECTOR: '.mdc-switch__thumb-underlay',\n};\n\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSwitchAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCSwitchAdapter>}\n */\nclass MDCSwitchFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return {!MDCSwitchAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCSwitchAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setNativeControlChecked: (/* checked: boolean */) => {},\n      setNativeControlDisabled: (/* disabled: boolean */) => {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSwitchFoundation.defaultAdapter, adapter));\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.adapter_.setNativeControlChecked(checked);\n    this.updateCheckedStyling_(checked);\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.adapter_.setNativeControlDisabled(disabled);\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /**\n   * Handles the change event for the switch native control.\n   * @param {!Event} evt\n   */\n  handleChange(evt) {\n    this.updateCheckedStyling_(evt.target.checked);\n  }\n\n  /**\n   * Updates the styling of the switch based on its checked state.\n   * @param {boolean} checked\n   * @private\n   */\n  updateCheckedStyling_(checked) {\n    if (checked) {\n      this.adapter_.addClass(cssClasses.CHECKED);\n    } else {\n      this.adapter_.removeClass(cssClasses.CHECKED);\n    }\n  }\n}\n\nexport default MDCSwitchFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport MDCComponent from '@material/base/component';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState, MDCSelectionControl} from '@material/selection-control/index';\n/* eslint-enable no-unused-vars */\nimport MDCSwitchFoundation from './foundation';\nimport {MDCRipple, MDCRippleFoundation} from '@material/ripple/index';\nimport {getMatchesProperty} from '@material/ripple/util';\n\n/**\n * @extends MDCComponent<!MDCSwitchFoundation>\n * @implements {MDCSelectionControl}\n */\nclass MDCSwitch extends MDCComponent {\n  static attachTo(root) {\n    return new MDCSwitch(root);\n  }\n\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!MDCRipple} */\n    this.ripple_ = this.initRipple_();\n\n    /** @private {!Function} */\n    this.changeHandler_;\n  }\n\n  destroy() {\n    super.destroy();\n    this.ripple_.destroy();\n    this.nativeControl_.removeEventListener('change', this.changeHandler_);\n  }\n\n  initialSyncWithDOM() {\n    this.changeHandler_ = this.foundation_.handleChange.bind(this.foundation_);\n    this.nativeControl_.addEventListener('change', this.changeHandler_);\n\n    // Sometimes the checked state of the input element is saved in the history.\n    // The switch styling should match the checked state of the input element.\n    // Do an initial sync between the native control and the foundation.\n    this.checked = this.checked;\n  }\n\n  /**\n   * Returns the state of the native control element, or null if the native control element is not present.\n   * @return {?MDCSelectionControlState}\n   * @private\n   */\n  get nativeControl_() {\n    const {NATIVE_CONTROL_SELECTOR} = MDCSwitchFoundation.strings;\n    const el = /** @type {?MDCSelectionControlState} */ (\n      this.root_.querySelector(NATIVE_CONTROL_SELECTOR));\n    return el;\n  }\n\n  /**\n   * @return {!MDCRipple}\n   * @private\n   */\n  initRipple_() {\n    const {RIPPLE_SURFACE_SELECTOR} = MDCSwitchFoundation.strings;\n    const rippleSurface = /** @type {!Element} */ (this.root_.querySelector(RIPPLE_SURFACE_SELECTOR));\n\n    const MATCHES = getMatchesProperty(HTMLElement.prototype);\n    const adapter = Object.assign(MDCRipple.createAdapter(this), {\n      isUnbounded: () => true,\n      isSurfaceActive: () => this.nativeControl_[MATCHES](':active'),\n      addClass: (className) => rippleSurface.classList.add(className),\n      removeClass: (className) => rippleSurface.classList.remove(className),\n      registerInteractionHandler: (type, handler) => this.nativeControl_.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) => this.nativeControl_.removeEventListener(type, handler),\n      updateCssVariable: (varName, value) => rippleSurface.style.setProperty(varName, value),\n      computeBoundingRect: () => rippleSurface.getBoundingClientRect(),\n    });\n    const foundation = new MDCRippleFoundation(adapter);\n    return new MDCRipple(this.root_, foundation);\n  }\n\n  /** @return {!MDCSwitchFoundation} */\n  getDefaultFoundation() {\n    return new MDCSwitchFoundation({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      setNativeControlChecked: (checked) => this.nativeControl_.checked = checked,\n      setNativeControlDisabled: (disabled) => this.nativeControl_.disabled = disabled,\n    });\n  }\n\n  /** @return {!MDCRipple} */\n  get ripple() {\n    return this.ripple_;\n  }\n\n  /** @return {boolean} */\n  get checked() {\n    return this.nativeControl_.checked;\n  }\n\n  /** @param {boolean} checked */\n  set checked(checked) {\n    this.foundation_.setChecked(checked);\n  }\n\n  /** @return {boolean} */\n  get disabled() {\n    return this.nativeControl_.disabled;\n  }\n\n  /** @param {boolean} disabled */\n  set disabled(disabled) {\n    this.foundation_.setDisabled(disabled);\n  }\n}\n\nexport {MDCSwitchFoundation, MDCSwitch};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { MDCSwitch } from '@material/switch';\nimport { h } from 'preact';\nimport MaterialComponent from '../Base/MaterialComponent';\nexport class Switch extends MaterialComponent {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'switch';\n        this.mdcProps = ['disabled', 'checked'];\n        this.mdcNotifyProps = ['disabled', 'checked'];\n    }\n    componentDidMount() {\n        super.componentDidMount();\n        if (this.control) {\n            this.MDComponent = new MDCSwitch(this.control);\n        }\n    }\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        if (this.MDComponent) {\n            this.MDComponent.destroy();\n        }\n    }\n    materialDom(allprops) {\n        const { className } = allprops, props = __rest(allprops, [\"className\"]);\n        return (h(\"div\", { className: className, ref: this.setControlRef },\n            h(\"div\", { class: \"mdc-switch__track\" }),\n            h(\"div\", { class: \"mdc-switch__thumb-underlay\" },\n                h(\"div\", { class: \"mdc-switch__thumb\" },\n                    h(\"input\", Object.assign({ type: \"checkbox\", id: \"basic-switch\", class: \"mdc-switch__native-control\", role: \"switch\" }, props))))));\n    }\n}\nexport default Switch;\n//# sourceMappingURL=index.js.map","export default function (prop) {\n    return `mdc-theme--${prop}-bg`;\n}\n//# sourceMappingURL=generateThemeClass.js.map","import { h } from 'preact';\nimport MaterialComponent from '../Base/MaterialComponent';\nimport Icon from '../Icon';\nimport generateThemeClass from '../themeUtils/generateThemeClass';\nexport class ButtonIcon extends Icon {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'button__icon';\n    }\n}\nexport class Button extends MaterialComponent {\n    constructor() {\n        super(...arguments);\n        this.componentName = 'button';\n        this.mdcProps = ['dense', 'raised', 'unelevated', 'outlined'];\n        this.themeProps = ['primary', 'secondary'];\n    }\n    materialDom(props) {\n        const ButtonElement = props.href ? 'a' : 'button';\n        let className = '';\n        this.themeProps.forEach(themeProp => {\n            if (themeProp in props && props[themeProp] !== false) {\n                className += generateThemeClass(themeProp) + ' ';\n            }\n        });\n        return (h(ButtonElement, Object.assign({ ref: this.setControlRef }, props, { className: className }), this.props.children));\n    }\n}\nexport default class default_1 extends Button {\n}\ndefault_1.Icon = ButtonIcon;\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}