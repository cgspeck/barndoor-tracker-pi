(*models.AppContext)({
  RWMutex: (sync.RWMutex) {
    w: (sync.Mutex) {
      state: (int32) 0,
      sema: (uint32) 0
    },
    writerSem: (uint32) 0,
    readerSem: (uint32) 0,
    readerCount: (int32) 0,
    readerWait: (int32) 0
  },
  AlignStatus: (*models.AlignStatus)({
    RWMutex: (sync.RWMutex) {
      w: (sync.Mutex) {
        state: (int32) 0,
        sema: (uint32) 0
      },
      writerSem: (uint32) 0,
      readerSem: (uint32) 0,
      readerCount: (int32) 0,
      readerWait: (int32) 0
    },
    AzAligned: (bool) true,
    AltAligned: (bool) true,
    CurrentAz: (float64) 181.2,
    CurrentAlt: (float64) -37.4
  }),
  Flags: (*models.Flags)({
    RWMutex: (sync.RWMutex) {
      w: (sync.Mutex) {
        state: (int32) 0,
        sema: (uint32) 0
      },
      writerSem: (uint32) 0,
      readerSem: (uint32) 0,
      readerCount: (int32) 0,
      readerWait: (int32) 0
    },
    NeedsNetworkSettings: (bool) false,
    NeedsLocationSettings: (bool) true,
    RunningAsRoot: (bool) false
  }),
  LocationSettings: (*models.LocationSettings)({
    RWMutex: (sync.RWMutex) {
      w: (sync.Mutex) {
        state: (int32) 0,
        sema: (uint32) 0
      },
      writerSem: (uint32) 0,
      readerSem: (uint32) 0,
      readerCount: (int32) 0,
      readerWait: (int32) 0
    },
    Latitude: (float64) 3.4,
    MagDeclination: (float64) -5.6,
    AzError: (float64) 2,
    AltError: (float64) 1,
    XOffset: (int) 7,
    YOffset: (int) 8,
    ZOffset: (int) 9,
    IgnoreAz: (bool) false,
    IgnoreAlt: (bool) false
  }),
  Time: (*time.Time)(0001-01-01 00:00:00 +0000 UTC),
  NetworkSettings: (*models.NetworkSettings)({
    RWMutex: (sync.RWMutex) {
      w: (sync.Mutex) {
        state: (int32) 0,
        sema: (uint32) 0
      },
      writerSem: (uint32) 0,
      readerSem: (uint32) 0,
      readerCount: (int32) 0,
      readerWait: (int32) 0
    },
    AccessPointMode: (bool) true,
    APSettings: (*models.APSettings)({
      RWMutex: (sync.RWMutex) {
        w: (sync.Mutex) {
          state: (int32) 0,
          sema: (uint32) 0
        },
        writerSem: (uint32) 0,
        readerSem: (uint32) 0,
        readerCount: (int32) 0,
        readerWait: (int32) 0
      },
      Channel: (int) 11,
      Key: (string) (len=8) "some key",
      SSID: (string) (len=18) "my amazing hotspot"
    }),
    AvailableNetworks: ([]*models.AvailableNetwork) {
    },
    ManagementEnabled: (bool) false,
    WirelessInterface: (string) (len=5) "wlan0",
    WirelessProfiles: ([]*models.WirelessProfile) {
    }
  }),
  OS: (string) (len=5) "linux",
  Arch: (string) (len=5) "amd64"
})
(interface {}) <nil>
